apply plugin: 'com.android.application'

def getVersionCode = { ->
    try {
        def code = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-list', '--first-parent', "--count" , "HEAD"
            standardOutput = code
        }
        String s = code
        Integer version = s as Integer
        return version
    }
    catch (ignored) {
        return -1;
    }
}

def getVersionName = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--tags', '--abbrev=0'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }
    catch (ignored) {
        return null;
    }
}

android {
    compileSdkVersion 28

    defaultConfig {
        applicationId "com.github.dired.pmcaevftoggle"
        minSdkVersion 10
        targetSdkVersion 28
        versionCode getVersionCode()
        versionName getVersionName()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    dependencies {
        implementation 'com.github.ma1co.OpenMemories-Framework:framework:-SNAPSHOT'
        compileOnly 'com.github.ma1co.OpenMemories-Framework:stubs:-SNAPSHOT'
        implementation 'com.nanohttpd:nanohttpd:2.1.1'
    }

    applicationVariants.all {
        variant ->
            variant.outputs.each {
                output ->
                    def name = applicationId+"-"+versionName+"."+versionCode+".apk"
                    output.outputFileName = name
            }
    }

    lint {
        baseline = file("lint-baseline.xml")
    }
}